"use strict";var u=Object.create;var n=Object.defineProperty;var v=Object.getOwnPropertyDescriptor;var w=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,x=Object.prototype.hasOwnProperty;var b=(e,o)=>{for(var s in o)n(e,s,{get:o[s],enumerable:!0})},f=(e,o,s,i)=>{if(o&&typeof o=="object"||typeof o=="function")for(let r of w(o))!x.call(e,r)&&r!==s&&n(e,r,{get:()=>o[r],enumerable:!(i=v(o,r))||i.enumerable});return e};var p=(e,o,s)=>(s=e!=null?u(m(e)):{},f(o||!e||!e.__esModule?n(s,"default",{value:e,enumerable:!0}):s,e)),h=e=>f(n({},"__esModule",{value:!0}),e);var j={};b(j,{activate:()=>k,deactivate:()=>E});module.exports=h(j);var t=p(require("vscode")),g=p(require("fs"));function k(e){let o=t.commands.registerCommand("hide.unhide",()=>{let s=t.workspace.getConfiguration("files"),i=t.workspace.workspaceFolders;if(!i){t.window.showErrorMessage("No workspace folder open");return}let r=i[0].uri;try{let c=g.readFileSync(r.fsPath+"/.vscode/settings.json","utf8"),a=JSON.parse(c)["files.exclude"],d={};for(let l in a)d[l]=!a[l];s.update("exclude",d)}catch{t.window.showErrorMessage("Failed to read or parse settings.json")}});e.subscriptions.push(o)}function E(){}0&&(module.exports={activate,deactivate});
